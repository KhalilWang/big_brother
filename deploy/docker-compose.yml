version: "3.8"

networks:
  loki:

volumes:
  prometheus:
  grafana:
  alertmanager-data:
  loki:

services:
  # Since the Loki containers are running as user 10001 and the mounted data volume is owned by root,
  # Loki would not have permissions to create the directories.
  # Therefore the init container changes permissions of the mounted directory.
  init:
    image: &lokiImage grafana/loki:2.9.2
    user: root
    entrypoint:
      - "chown"
      - "10001:10001"
      - "/loki"
    volumes:
      - ./loki:/loki
    networks:
      - loki

  prometheus:
    image: prom/prometheus:v2.27.0
    restart: always
    volumes: 
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--log.level=debug'
      - '--web.enable-lifecycle'
    ports:
      - 9090:9090
    networks:
      - loki

  grafana:
    image: grafana/grafana:9.1.6
    ports:
      - 3000:3000
    restart: always
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=asdqwe!234
    volumes:
      - ./config/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
      - grafana:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - loki

  loki-gateway:
    image: nginx:1.19
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "8080:80"
      - "3100"
    networks:
      - loki
  
  loki-read:
    image: *lokiImage
    volumes:
      - ./config:/etc/loki/
      - ./loki:/tmp/loki
    ports:
      - "3100"
      - "7946"
    command: "-config.file=/etc/loki/loki.yml -target=read -legacy-read-mode=false"
    networks:
      - loki
    restart: always
    deploy:
      mode: replicated
      replicas: 3

  loki-write:
    image: *lokiImage
    volumes:
      - ./config:/etc/loki/
      - ./loki:/tmp/loki
    ports:
      - "3100"
      - "7946"
    command: "-config.file=/etc/loki/loki.yml -target=write"
    networks:
      - loki
    restart: always
    deploy:
      mode: replicated
      replicas: 3


  loki-backend:
    image: *lokiImage
    volumes:
      - ./config:/etc/loki/
      - ./rules:/loki/rules:ro
      - ./loki:/tmp/loki
    ports:
      - "3100"
      - "7946"
    command: "-config.file=/etc/loki/loki.yml -target=backend -legacy-read-mode=false"
    networks:
      - loki
    restart: always
    deploy:
      mode: replicated
      replicas: 3


  # ------ OTHER MAYBE USABLE SERVICES —————————
  # for testing purposes only, disable in production

  # log-generator:
  #   image: mingrammer/flog
  #   command:
  #     - --loop
  #     - --format=json
  #     - --number=3 # number of log lines to generate per second
  #     - --delay=500ms # delay between log lines
  #     - --output=/var/log/generated-logs.txt
  #     - --overwrite
  #     - --type=log
  #   volumes:
  #     - ./test_log_save/:/var/log/

  # promtail:
  #   image: grafana/promtail:2.9.2
  #   volumes:
  #     - ./test_log_save/:/var/log/
  #     - ./config:/etc/promtail/
  #   ports:
  #     - 9080
  #   command: -config.file=/etc/promtail/promtail.yaml
  #   networks:
  #     - loki
  
  # alertmanager to enable receiving alerts
  # alertmanager:
  #   image: prom/alertmanager:v0.23.0
  #   restart: unless-stopped
  #   ports:
  #     - "9093:9093"
  #   volumes:
  #     - "./config:/config"
  #     - alertmanager-data:/data
  #   command: --config.file=/config/alertmanager.yml --log.level=debug
  #   networks:
  #     - loki

